/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.PI.messages;
import PROJETO_INTEGRADOR.Senha;
import com.PI.database.DatabaseConnection;
import com.PI.database.MessageDao;
import com.PI.entidades.Message;
import com.PI.entidades.User;
import static com.PI.inicial.Home.deleteMessage;
import static com.PI.inicial.Home.deselect;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class SendboxForm extends javax.swing.JFrame {
    private User currentUser;   
    /**
     * Creates new form FormMenEnt
     * @param currentUser
     */
    public SendboxForm(User currentUser) {
        this.currentUser = currentUser;
        initComponents();
    }
    
    public SendboxForm() {
        initComponents();
    }

      private void loadSendboxTable() throws SQLException {
        DatabaseConnection databaseConnection = new DatabaseConnection(
            "root", Senha.getPass(), "manager_messages", "localhost", 3306);
        MessageDao messageDao = new MessageDao(databaseConnection);    
        
        Vector<Message> messages = messageDao.findAll(currentUser);
        DefaultTableModel sendboxModel = (DefaultTableModel) sendboxTable.getModel();
        
        for (Message message : messages) {    
            sendboxModel.addRow(new Object[]{
                message.getContId().getContactName(), message.getMessage(), message.getId()
            });
        }  
        databaseConnection.getConnection().close();  
    }  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deleteBtn = new javax.swing.JButton();
        scrollSendboxTable = new javax.swing.JScrollPane();
        sendboxTable = new javax.swing.JTable();
        editBtn = new javax.swing.JButton();
        sendBoxLb = new javax.swing.JLabel();

        setTitle("Mensagens Enviadas");
        setBackground(new java.awt.Color(0, 51, 153));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        deleteBtn.setText("Excluir");
        deleteBtn.setToolTipText("");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        sendboxTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        sendboxTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Contato", "Mensagem", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sendboxTable.setAlignmentX(1.0F);
        sendboxTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        sendboxTable.setGridColor(new java.awt.Color(102, 153, 255));
        sendboxTable.setRowHeight(25);
        sendboxTable.setSelectionBackground(new java.awt.Color(0, 102, 204));
        scrollSendboxTable.setViewportView(sendboxTable);
        if (sendboxTable.getColumnModel().getColumnCount() > 0) {
            sendboxTable.getColumnModel().getColumn(0).setMaxWidth(275);
            sendboxTable.getColumnModel().getColumn(1).setMaxWidth(400);
            sendboxTable.getColumnModel().getColumn(2).setMinWidth(0);
            sendboxTable.getColumnModel().getColumn(2).setPreferredWidth(0);
            sendboxTable.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        editBtn.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        editBtn.setText("Editar");
        editBtn.setToolTipText("");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        sendBoxLb.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        sendBoxLb.setLabelFor(sendboxTable);
        sendBoxLb.setText("Mensagens Enviadas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollSendboxTable, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sendBoxLb)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addComponent(deleteBtn)
                .addGap(18, 18, 18)
                .addComponent(editBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(sendBoxLb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollSendboxTable, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int end = 1;
        if (sendboxTable.getSelectedRow() != -1) {
            end = JOptionPane.showConfirmDialog(rootPane,
            "Tem certeza que deseja excluir a mensagem?",
            "Excluir Contato", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        }
        if (end == 0) {
            try {
                deleteMessage(sendboxTable);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane,
                    "Erro inesperado aconteceu! " + ex.getErrorCode() + ex.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
            } 
        }    
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            loadSendboxTable();
        } catch (SQLException ex){
            JOptionPane.showMessageDialog(rootPane,
                "Erro inesperado aconteceu! " + ex.getErrorCode() + ex.getMessage(),
                "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formWindowOpened

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        if (sendboxTable.getSelectedRow()!= -1 ) {
            AddMesForm menAddForm = new AddMesForm();            
            menAddForm.setTitle("Editar mensagem");
            menAddForm.setVisible(true);
        }     
    }//GEN-LAST:event_editBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendboxForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendboxForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendboxForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendboxForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SendboxForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JScrollPane scrollSendboxTable;
    private javax.swing.JLabel sendBoxLb;
    private static javax.swing.JTable sendboxTable;
    // End of variables declaration//GEN-END:variables
    public static JTable getSendboxTable() {
        return SendboxForm.sendboxTable;
    }
}
