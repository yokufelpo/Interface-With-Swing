/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.PI.users;

import com.PI.verfic.TreatmentException;
import com.PI.database.DatabaseConnection;
import com.PI.database.UserDao;
import com.PI.entidades.User;
import PROJETO_INTEGRADOR.Senha;
import java.sql.SQLException;
import javax.swing.JOptionPane;



/**
 *
 * @author Usuario
 */
public class AddUserForm extends javax.swing.JFrame {
    
    

    /**
     * Creates new form FormUsuAdd
     */
    public AddUserForm() {
        initComponents();
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userField = new javax.swing.JTextField();
        lbUser = new javax.swing.JLabel();
        lbPassword = new javax.swing.JLabel();
        btnAddUser = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        doublePasswordField = new javax.swing.JPasswordField();
        lbDoublePassword = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Adicionar Usuário");

        userField.setColumns(10);
        userField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        userField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        userField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userFieldActionPerformed(evt);
            }
        });

        lbUser.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lbUser.setLabelFor(userField);
        lbUser.setText("Usuário:");

        lbPassword.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lbPassword.setLabelFor(passwordField);
        lbPassword.setText("Senha:");

        btnAddUser.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnAddUser.setText("ADICIONAR USUÁRIO");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        passwordField.setColumns(10);
        passwordField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        doublePasswordField.setColumns(10);
        doublePasswordField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        doublePasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doublePasswordFieldActionPerformed(evt);
            }
        });

        lbDoublePassword.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lbDoublePassword.setLabelFor(doublePasswordField);
        lbDoublePassword.setText("Confirma:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbDoublePassword)
                        .addGap(18, 18, 18)
                        .addComponent(doublePasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbUser)
                            .addComponent(lbPassword))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(99, 99, 99))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbUser)
                    .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPassword)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doublePasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDoublePassword))
                .addGap(31, 31, 31)
                .addComponent(btnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        try {
            validateRequiredFields();
            validateDoublePassword();
            
            DatabaseConnection databaseConnection = new DatabaseConnection(
                "root", Senha.getPass(), "manager_messages", "localhost", 3306);
            
            User user = new User(userField.getText(), passwordField.getText());
            UserDao userCrud = new UserDao(databaseConnection);
            userCrud.save(user);
            JOptionPane.showMessageDialog(rootPane, "Usuário cadastrado com sucesso!", 
                "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            this.setVisible(false);
            databaseConnection.getConnection().close();  
        } catch (TreatmentException treatmentException) {
            JOptionPane.showMessageDialog(rootPane, treatmentException.getMessage(),
                "Campos inválidos", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            switch (ex.getErrorCode()) {
                case 1062 -> JOptionPane.showMessageDialog(rootPane, 
                        "Nome de Usuário já cadastrado",               
                        "Erro", JOptionPane.ERROR_MESSAGE);
                case 1406 -> JOptionPane.showMessageDialog(rootPane, 
                            "Tamanho máximo de 25 caracteres excedido",
                            "Erro", JOptionPane.ERROR_MESSAGE);
                default -> JOptionPane.showMessageDialog(rootPane,           
                        "Erro inesperado aconteceu! " + ex.getErrorCode() + ex.getMessage(),
                        "Erro", JOptionPane.ERROR_MESSAGE);
            }      
        }
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void doublePasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doublePasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doublePasswordFieldActionPerformed

    private void userFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AddUserForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JPasswordField doublePasswordField;
    private javax.swing.JLabel lbDoublePassword;
    private javax.swing.JLabel lbPassword;
    private javax.swing.JLabel lbUser;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField userField;
    // End of variables declaration//GEN-END:variables
     private void validateRequiredFields() throws TreatmentException {
        if ((userField.getText().isBlank())||(passwordField.getText().isBlank())) {
            throw new TreatmentException("Todos os campos são obrigatórios!");
        }
        
    }

    private void validateDoublePassword() throws TreatmentException {
        if (!passwordField.getText().equals(doublePasswordField.getText())) {
            throw new TreatmentException("Campo senha deve ser igual ao confirmação de senha!");
        }
    }   
    private void clean() {
        userField.setText("");
        passwordField.setText("");
        doublePasswordField.setText("");
    }
}
